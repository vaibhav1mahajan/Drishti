import React from "react";
import {
  LineChart,
  Line,
  XAxis,
  Tooltip,
  ResponsiveContainer,
  AreaChart,
  Area,
  PieChart,
  Pie,
  Cell,
  CartesianGrid,
} from "recharts";
import ChartCard from "../components/ChartCard";

const COLORS = ["#4F46E5", "#06B6D4", "#10B981", "#F59E0B", "#EF4444"];

const Forecasting: React.FC = () => {
  // Mock data
  const sCurveData = [
    { year: "2021", performance: 20 },
    { year: "2022", performance: 40 },
    { year: "2023", performance: 65 },
    { year: "2024", performance: 85 },
    { year: "2025", performance: 95 },
  ];

  const hypeData = [
    { phase: "Innovation Trigger", score: 30 },
    { phase: "Peak of Inflated Expectations", score: 80 },
    { phase: "Trough of Disillusionment", score: 45 },
    { phase: "Slope of Enlightenment", score: 70 },
    { phase: "Plateau of Productivity", score: 90 },
  ];

  const trlData = [
    { year: "2021", TRL: 2 },
    { year: "2022", TRL: 4 },
    { year: "2023", TRL: 6 },
    { year: "2024", TRL: 7 },
    { year: "2025", TRL: 9 },
  ];

  const marketData = [
    { year: "2021", conservative: 20, base: 25, aggressive: 30 },
    { year: "2022", conservative: 30, base: 35, aggressive: 45 },
    { year: "2023", conservative: 45, base: 50, aggressive: 65 },
    { year: "2024", conservative: 60, base: 70, aggressive: 85 },
    { year: "2025", conservative: 75, base: 85, aggressive: 105 },
  ];

  const convergenceData = [
    { domain: "AI", value: 40 },
    { domain: "Biotech", value: 25 },
    { domain: "Quantum", value: 20 },
    { domain: "Energy", value: 15 },
  ];

  return (
    <div className="space-y-8 px-4 md:px-8">
      <div>
        <h1 className="text-3xl font-bold text-white">Forecasting</h1>
        <p className="text-gray-400">
          S-curve, Hype cycle, TRL progression, and market projections generated by our forecasting models.
        </p>
      </div>

      {/* Top 3 charts */}
      <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
        {/* S-Curve */}
        <ChartCard title="S-Curve (Performance)" subtitle="Model: Bayesian S-curve">
          <ResponsiveContainer width="100%" height={200}>
            <LineChart data={sCurveData}>
              <CartesianGrid stroke="#1F2937" strokeDasharray="3 3" />
              <XAxis dataKey="year" stroke="#FFFFFF" />
              <Tooltip contentStyle={{ backgroundColor: "#111827", border: "none", color: "#fff" }} />
              <Line type="monotone" dataKey="performance" stroke="#4F46E5" strokeWidth={2} dot={{ r: 3 }} />
            </LineChart>
          </ResponsiveContainer>
        </ChartCard>

        {/* Hype Cycle */}
        <ChartCard title="Hype Cycle" subtitle="Normalized hype score">
          <ResponsiveContainer width="100%" height={200}>
            <LineChart data={hypeData}>
              <CartesianGrid stroke="#1F2937" strokeDasharray="3 3" />
              <XAxis dataKey="phase" stroke="#FFFFFF" />
              <Tooltip contentStyle={{ backgroundColor: "#111827", border: "none", color: "#fff" }} />
              <Line type="monotone" dataKey="score" stroke="#06B6D4" strokeWidth={2} dot={{ r: 3 }} />
            </LineChart>
          </ResponsiveContainer>
        </ChartCard>

        {/* TRL Projection */}
        <ChartCard title="TRL Projection" subtitle="Predicted readiness levels">
          <ResponsiveContainer width="100%" height={200}>
            <LineChart data={trlData}>
              <CartesianGrid stroke="#1F2937" strokeDasharray="3 3" />
              <XAxis dataKey="year" stroke="#FFFFFF" />
              <Tooltip contentStyle={{ backgroundColor: "#111827", border: "none", color: "#fff" }} />
              <Line type="monotone" dataKey="TRL" stroke="#10B981" strokeWidth={2} dot={{ r: 3 }} />
            </LineChart>
          </ResponsiveContainer>
        </ChartCard>
      </div>

      {/* Bottom 2 charts */}
      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        {/* Market Projection */}
        <ChartCard title="Market Size Projection" subtitle="Scenario: conservative / base / aggressive">
          <ResponsiveContainer width="100%" height={200}>
            <AreaChart data={marketData}>
              <CartesianGrid stroke="#1F2937" strokeDasharray="3 3" />
              <XAxis dataKey="year" stroke="#FFFFFF" />
              <Tooltip contentStyle={{ backgroundColor: "#111827", border: "none", color: "#fff" }} />
              <Area type="monotone" dataKey="conservative" stroke="#F59E0B" fill="#F59E0B" fillOpacity={0.3} />
              <Area type="monotone" dataKey="base" stroke="#4F46E5" fill="#4F46E5" fillOpacity={0.3} />
              <Area type="monotone" dataKey="aggressive" stroke="#EF4444" fill="#EF4444" fillOpacity={0.3} />
            </AreaChart>
          </ResponsiveContainer>
        </ChartCard>

        {/* Convergence Detection */}
        <ChartCard title="Convergence Detection" subtitle="Cross-domain signals">
          <ResponsiveContainer width="100%" height={200}>
            <PieChart>
              <Pie data={convergenceData} dataKey="value" nameKey="domain" outerRadius={70}>
                {convergenceData.map((_, index) => (
                  <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />
                ))}
              </Pie>
              <Tooltip contentStyle={{ backgroundColor: "grey", border: "none", color: "#fff" }} />
            </PieChart>
          </ResponsiveContainer>
        </ChartCard>
      </div>
    </div>
  );
};

export default Forecasting;
